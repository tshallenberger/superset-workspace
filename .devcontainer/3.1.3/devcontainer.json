// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.217.4/containers/python-3
{
  "name": "Apache Superset v3.1.3",
  "dockerComposeFile": [
    "../docker-compose.yml",
    "docker-compose.3.1.3.yml"
  ],
  "service": "app",
  "workspaceFolder": "/workspace",
  "containerEnv": {
    "PYTHONPATH": "$PYTHONPATH:/workspace/config",
    "SUPERSETPATH": "/workspace/superset",
    "VOLUMES": "/workspace/.devcontainer/volumes",
    "EXPORTS": "/app/exports",
    "SUPERSET_VERSION": "3.1.3",
    "ARTIFACT_VERSION": "3.1.3"
  },
  "remoteEnv": {
    "USER": "${localEnv:USER}" // not needed if Dockerfile specifies the USER
  },
  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  "forwardPorts": [
    3306, // mysql
    6379, // redis
    8088, // superset (flask)
    9000 // superset (superset-frontend > npm run dev-server) (runs webpack with hot reload)
  ],
  // Use 'postCreateCommand' to run commands after the container is created
  // this ensures that the project is ready to be developed on with changes
  // being immediately available and testable. This can't be done in the Dockerfile
  "postCreateCommand": "",
  "postAttachCommand": "git config --global --add safe.directory /workspace",
  // More info: https://aka.ms/vscode-remote/containers/non-root.
  // "remoteUser": "${localEnv:USER}",
  // "containerUser": "${localEnv:USER}",
  "customizations": {
    "vscode": {
      "extensions": [
        "ms-azuretools.vscode-docker",
        "ms-python.python",
        "eamodio.gitlens",
        "mutantdino.resourcemonitor",
        "IronGeek.vscode-env",
        "KevinRose.vsc-python-indent",
        "ms-python.black-formatter",
        "file-icons.file-icons",
        "esbenp.prettier-vscode",
        "yzhang.markdown-all-in-one",
        "dbaeumer.vscode-eslint",
        "samuelcolvin.jinjahtml"
      ],
      "settings": {
        // required to enable certain vscode extensions
        "extensions.verifySignature": false,
        "python.defaultInterpreterPath": "/usr/local/bin/python",
        "python.formatting.provider": "black",
        "python.formatting.blackPath": "/usr/local/bin/black",
        "editor.insertSpaces": true,
        "editor.tabSize": 2,
        "editor.detectIndentation": false,
        "editor.formatOnSave": false,
        "[python]": {
          "editor.formatOnSave": true
        }
      }
    }
  }
}